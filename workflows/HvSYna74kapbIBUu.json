{
  "active": false,
  "connections": {
    "RAG": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Verify": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond": {
      "main": [
        [
          {
            "node": "is Message?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get folder": {
      "main": [
        [
          {
            "node": "Download Files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "is Message?": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Only message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Files": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Retrive Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "RAG",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Refresh collection": {
      "main": [
        [
          {
            "node": "Get folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Retrive Qdrant Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "RAG",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Create collection",
            "type": "main",
            "index": 0
          },
          {
            "node": "Refresh collection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-19T10:44:50.044Z",
  "id": "HvSYna74kapbIBUu",
  "isArchived": true,
  "meta": {
    "templateId": "2845"
  },
  "name": "Complete business WhatsApp AI-Powered RAG Chatbot using OpenAI 2",
  "nodes": [
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query['hub.challenge'] }}",
        "options": {}
      },
      "id": "5be03c5c-e02d-4770-b0db-795dff0bf84f",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        928,
        1184
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "={{ $('Respond').item.json.body.entry[0].changes[0].value.messages[0].text.body }}",
        "options": {
          "systemMessage": "You are an AI-powered assistant for an electronics store. Your primary goal is to assist customers by providing accurate and helpful information about products, troubleshooting tips, and general support. Use the provided knowledge base (retrieved documents) to answer questions with precision and professionalism.\n\n**Guidelines**:\n1. **Product Information**:\n   - Provide detailed descriptions of products, including specifications, features, and compatibility.\n   - Highlight key selling points and differences between similar products.\n   - Mention availability, pricing, and promotions if applicable.\n\n2. **Technical Support**:\n   - Offer step-by-step troubleshooting guides for common issues.\n   - Suggest solutions for setup, installation, or configuration problems.\n   - If the issue is complex, recommend contacting the store’s support team for further assistance.\n\n3. **Customer Service**:\n   - Respond politely and professionally to all inquiries.\n   - If a question is unclear, ask for clarification to provide the best possible answer.\n   - For order-related questions (e.g., status, returns, or cancellations), guide customers on how to proceed using the store’s systems.\n\n4. **Knowledge Base Usage**:\n   - Always reference the provided knowledge base (retrieved documents) to ensure accuracy.\n   - If the knowledge base does not contain relevant information, inform the customer and suggest alternative resources or actions.\n\n5. **Tone and Style**:\n   - Use a friendly, approachable, and professional tone.\n   - Avoid technical jargon unless the customer demonstrates familiarity with the topic.\n   - Keep responses concise but informative.\n\n**Example Interactions**:\n1. **Product Inquiry**:\n   - Customer: \"What’s the difference between the XYZ Smartwatch and the ABC Smartwatch?\"\n   - AI: \"The XYZ Smartwatch features a longer battery life (up to 7 days) and built-in GPS, while the ABC Smartwatch has a brighter AMOLED display and supports wireless charging. Both are compatible with iOS and Android devices. Would you like more details on either product?\"\n\n2. **Technical Support**:\n   - Customer: \"My wireless router isn’t connecting to the internet.\"\n   - AI: \"Please try the following steps: 1) Restart your router and modem. 2) Ensure all cables are securely connected. 3) Check if the router’s LED indicators show a stable connection. If the issue persists, you may need to reset the router to factory settings. Would you like a detailed guide for resetting your router?\"\n\n3. **Customer Service**:\n   - Customer: \"How do I return a defective product?\"\n   - AI: \"To return a defective product, please visit our Returns Portal on our website and enter your order number. You’ll receive a return label and instructions. If you need further assistance, our support team is available at support@electronicsstore.com.\"\n\n**Limitations**:\n- If the question is outside the scope of the knowledge base or requires human intervention, inform the customer and provide contact details for the appropriate department.\n- Do not provide speculative or unverified information. Always rely on the knowledge base or direct the customer to official resources."
        }
      },
      "id": "8e24d1bc-8e65-4562-8cc4-4ce9c917841b",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1472,
        1520
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "content": "# STEP 4\n\n## RAG System\n\n\n\n\n\n\n\n\n\n\n\n\n\n* *Respond* webhook receives various POST Requests from Meta regarding WhatsApp messages (user messages + status notifications)\n* Check if the incoming JSON contains user message\n* Echo back the text message to the user. This is a custom message, not a WhatsApp Business template message\n",
        "height": 485,
        "width": 459
      },
      "id": "22fe09e5-053c-4f80-9e44-71f533492e31",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        656,
        1408
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "cfed3c49-be8a-4d1a-aa3a-5e60a19c00ac",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1472,
        1728
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {},
      "id": "55970db5-284d-40b9-ad6f-f43b513aac45",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        368,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "options": {}
      },
      "id": "99de11b0-ab4a-49fe-977b-b3102c9ff1cf",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        1360,
        368
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://QDRANTURL/collections/COLLECTION",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"filter\": {}\n}",
        "options": {}
      },
      "id": "619d2d2f-7a1e-49ba-a3ae-24bf24287dd2",
      "name": "Create collection",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        672,
        112
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://QDRANTURL/collections/COLLECTION/points/delete",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"filter\": {}\n}",
        "options": {}
      },
      "id": "b61d5d74-14d2-4488-a0d6-3f7df9745329",
      "name": "Refresh collection",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        672,
        368
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "filter": {
          "driveId": {
            "__rl": true,
            "mode": "list",
            "value": "My Drive",
            "cachedResultUrl": "https://drive.google.com/drive/my-drive",
            "cachedResultName": "My Drive"
          },
          "folderId": {
            "__rl": true,
            "mode": "id",
            "value": "=test-whatsapp"
          }
        },
        "options": {}
      },
      "id": "71c8817f-f5be-4900-aecc-14d483993c4c",
      "name": "Get folder",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        896,
        368
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "c14e570d-527d-4cc2-b0c0-2406b814ffc6",
      "name": "Download Files",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        1120,
        368
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "7f1ffbd5-7aa0-49d3-aa11-9568ac704d6e",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        1328,
        560
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "id": "bdc58292-5880-41b9-bc55-d6437f037629",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1520,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkSize": 300,
        "chunkOverlap": 30
      },
      "id": "7df52ba0-011e-44a5-b25d-a4610f903ed9",
      "name": "Token Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "position": [
        1472,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Important!\n### Configure the webhook nodes this way:\n* Make sure that both *Verify* and *Respond* have the same URL\n* *Verify* should have GET HTTP Method\n* *Respond* should have POST HTTP Method",
        "height": 177,
        "width": 405,
        "color": 3
      },
      "id": "b3306890-d527-44d9-bd42-2decd61b35a2",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        112,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# STEP 3\n\n## Create Webhook\n* Go to your [Meta for Developers App page](https://developers.facebook.com/apps/), navigate to the App settings\n* Add a **production webhook URL** as a new Callback URL\n* *Verify* webhook receives a GET Request and sends back a verification code\n* After that you can delete this\n",
        "height": 392,
        "width": 618,
        "color": 5
      },
      "id": "2da39c54-1596-4674-99c5-8fdac7873ea3",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        656,
        944
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "path": "f0d2e6f6-8fda-424d-b377-0bd191343c20",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "9c8a18df-d2a9-4d91-a799-a8ee6c5160ba",
      "name": "Verify",
      "type": "n8n-nodes-base.webhook",
      "position": [
        688,
        1184
      ],
      "webhookId": "f0d2e6f6-8fda-424d-b377-0bd191343c20",
      "typeVersion": 2
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "f0d2e6f6-8fda-424d-b377-0bd191343c20",
        "options": {}
      },
      "id": "1ca39545-9ec1-489d-bcaf-f6289163d3e0",
      "name": "Respond",
      "type": "n8n-nodes-base.webhook",
      "position": [
        672,
        1568
      ],
      "webhookId": "f0d2e6f6-8fda-424d-b377-0bd191343c20",
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "959fbffc-876a-4235-87be-2dedba4926cd",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              },
              "leftValue": "={{ $json.body.entry[0].changes[0].value.messages[0] }}",
              "rightValue": ""
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "02ae9009-b34b-49a5-86f2-50e681125d77",
      "name": "is Message?",
      "type": "n8n-nodes-base.if",
      "position": [
        896,
        1568
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "470271332838881",
        "recipientPhoneNumber": "={{ $('Respond').item.json.body.entry[0].changes[0].value.contacts[0].wa_id }}",
        "textBody": "=You can only send text messages",
        "additionalFields": {}
      },
      "id": "9f866e16-cedb-4c43-ab38-e0e53703402a",
      "name": "Only message",
      "type": "n8n-nodes-base.whatsApp",
      "position": [
        1200,
        1664
      ],
      "typeVersion": 1,
      "webhookId": "7322bce8-8c75-410b-bb35-117023d866a2"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "470271332838881",
        "recipientPhoneNumber": "={{ $('Respond').item.json.body.entry[0].changes[0].value.contacts[0].wa_id }}",
        "textBody": "={{ $json.output }}",
        "additionalFields": {}
      },
      "id": "3867b8c8-db5f-40f6-b3ae-edf1ab732395",
      "name": "Send",
      "type": "n8n-nodes-base.whatsApp",
      "position": [
        1888,
        1520
      ],
      "typeVersion": 1,
      "webhookId": "a4a1ea9f-9555-4525-b436-4c712ab9e098"
    },
    {
      "parameters": {},
      "id": "401a8204-4cea-4bd0-9ae7-8c5c6797c586",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        1632,
        1760
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "content": "# STEP 1\n\n## Create Qdrant Collection\nChange:\n- QDRANTURL\n- COLLECTION",
        "height": 220,
        "width": 880,
        "color": 6
      },
      "id": "ff1ebe0d-b572-4b77-ad67-351c0ec17927",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        880,
        48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# STEP 2\n\n\n\n\n\n\n\n\n\n\n\n\n## Documents vectorization with Qdrant and Google Drive\nChange:\n- QDRANTURL\n- COLLECTION",
        "height": 400,
        "width": 620,
        "color": 4
      },
      "id": "df7bc44c-fb7d-4bc4-bc79-245f53e17eca",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        656,
        304
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Configure AI Agent\nSet System prompt and chat model. If you want you can set any tools",
        "height": 260,
        "width": 380
      },
      "id": "df4f90ab-1cbb-4335-893a-0f3e2a62be04",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1440,
        1408
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "b0928ee4-2c6a-4bc0-a013-15504f157379",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1968,
        1968
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "COLLECTION"
        },
        "options": {}
      },
      "id": "16ca729c-9492-4af1-a02f-9b3e5b4ebc43",
      "name": "Retrive Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        1616,
        1984
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c950482d-23e3-4318-a878-f80f8cfee556",
      "name": "Embeddings OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        1488,
        2192
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "name": "company_data",
        "description": "Retrive data about company knowledge from vector store"
      },
      "id": "46347cfc-b4e7-4627-a991-3f30c12d7f42",
      "name": "RAG",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "position": [
        1840,
        1744
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-30T09:27:44.000Z",
  "versionId": "2f707a8e-633b-4cb3-b487-2d662650e31a"
}