{
  "active": false,
  "connections": {
    "5 sec": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Results": {
      "main": [
        [
          {
            "node": "5 sec",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Collect Routes": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Results": {
      "main": [
        [
          {
            "node": "Save Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Request Open Route API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request Open Route API": {
      "main": [
        [
          {
            "node": "Extract Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking â€˜Test workflowâ€™": {
      "main": [
        [
          {
            "node": "Collect Routes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-19T01:47:21.301Z",
  "id": "i4PCFKX6dkGTsHXt",
  "isArchived": false,
  "meta": {
    "templateId": "4564"
  },
  "name": "ðŸšš Estimate Driving Time and Distance for Logistics with Open Route API",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "4660840a-499a-4d44-be7c-1d0edfee9634",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1040,
        672
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4d0acd1a-c049-4353-9fb7-8eb08c138b9c",
              "name": "distance",
              "type": "string",
              "value": "={{ $json.features[0].properties.segments[0].distance }}"
            },
            {
              "id": "2a6ff46a-f620-4dad-a60a-018b8add76d5",
              "name": "duration",
              "type": "string",
              "value": "={{ $json.features[0].properties.segments[0].duration }}"
            },
            {
              "id": "de20932f-4eb5-4372-ad6d-64679df104cb",
              "name": "n_steps",
              "type": "number",
              "value": "={{ $json.features[0].properties.segments[0].steps.length }}"
            },
            {
              "id": "540df5ea-cf63-47cc-8d63-3d6fcac825af",
              "name": "",
              "type": "string",
              "value": ""
            }
          ]
        },
        "options": {}
      },
      "id": "4401f929-3ad6-4b8d-90bf-2edc58d4b381",
      "name": "Extract Results",
      "type": "n8n-nodes-base.set",
      "position": [
        1600,
        688
      ],
      "notesInFlow": true,
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "url": "https://api.openrouteservice.org/v2/directions/driving-hgv",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "api_key"
            },
            {
              "name": "start",
              "value": "={{ $json.longitude_departure }}, {{ $json.latitude_departure }}"
            },
            {
              "name": "end",
              "value": "={{ $json.longitude_destination }}, {{ $json.latitude_destination }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "Accept",
              "value": "application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "14165f3a-104a-415a-b84b-86e903f86be8",
      "name": "Request Open Route API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1360,
        688
      ],
      "notesInFlow": true,
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1NLNviRoVMEj2z78KiueruB5sd2CnvAb80DS7J2melVs",
          "cachedResultUrl": "",
          "cachedResultName": "Open Route Service"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "",
          "cachedResultName": "Distance"
        },
        "options": {}
      },
      "id": "27f17e62-6528-4c29-b10e-38f79dc50811",
      "name": "Collect Routes",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        672,
        672
      ],
      "typeVersion": 4.6
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "",
          "cachedResultUrl": "",
          "cachedResultName": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "",
          "cachedResultName": ""
        },
        "columns": {
          "value": {
            "id": "={{ $('Loop Over Items').item.json.id }}",
            "n_steps": "={{ $json.n_steps }}",
            "distance": "={{ $json.distance }}",
            "duration": "={{ $json.duration }}"
          },
          "schema": [
            {
              "id": "id",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "id",
              "defaultMatch": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "city_departure",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "city_departure",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "longitude_departure",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "longitude_departure",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "latitude_departure",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "latitude_departure",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "city_destination",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "city_destination",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "longitude_destination",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "longitude_destination",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "latitude_destination",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "latitude_destination",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "distance",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "distance",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "duration",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "duration",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "n_steps",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "n_steps",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "type": "string",
              "display": true,
              "removed": true,
              "readOnly": true,
              "required": false,
              "displayName": "row_number",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "id"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "0ceec3de-34c0-4361-b6fc-527d2108cd4d",
      "name": "Save Results",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1808,
        688
      ],
      "notesInFlow": true,
      "typeVersion": 4.6
    },
    {
      "parameters": {
        "content": "### 1. Trigger the workflow\nThis starts by collecting all the routes (Departure, Destination) that need distance and driving time by **truck**.\n\n#### How to setup?\n\n- **Load records in the Google Sheet Node**:\n   1. Add your Google Sheet API credentials to access the Google Sheet file\n   2. Select the file using the list, an URL or an ID\n   3. Select the sheet in which you want to record your working sessions\n   4. Map the fields: **city_departure**, **longitude_departure** , **latitude_departure**, **city_destination**, **longitude_destination**, **latitude_destination**, **distance**, **duration**, **n_steps**\n  [Learn more about the Google Sheet Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets)\n\nThe last three fields must be left empty as they will be filled with the API outputs.\n",
        "height": 640,
        "width": 540,
        "color": 7
      },
      "id": "40e078a1-4cd5-46f0-938d-756c4a5d150d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "b723a6a2-6504-47f4-9ced-f84617a62dbe",
      "name": "When clicking â€˜Test workflowâ€™",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        448,
        672
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### 2. Loop to collect all driving distances and time \nThis starts by collecting all the routes (Departure, Destination) that need distance and driving time by **truck**.\n\n#### How to setup?\n- **Setup API Credentials**\n  1. Get your free API key: [Open Route API Documentation](https://openrouteservice.org/dev/#/api-docs)\n  2. Fill the API key in the HTTP request node\n  3. Select the driving mode (**driving-car**: individual truck) or (**driving-hgv**: commercial truck)\n- **Load records in the Google Sheet Node**:\n   1. Add your Google Sheet API credentials to access the Google Sheet file\n   2. Select the file using the list, an URL or an ID\n   3. Select the sheet in which you want to record your working sessions\n   4. Map the fields: **city_departure**, **longitude_departure**, **latitude_departure**, **city_destination**, **longitude_destination**, **latitude_destination**, **distance**, **duration**, **n_steps**\n  [Learn more about the Google Sheet Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets)\n\nThe last three fields must be left empty as they will be filled with the API outputs.\n",
        "height": 640,
        "width": 1240,
        "color": 7
      },
      "id": "3b5fa269-e880-4552-8b39-a9eccd8d0d4d",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        960,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "e0e79eea-04f0-462a-a930-01a0df4a0058",
      "name": "5 sec",
      "type": "n8n-nodes-base.wait",
      "position": [
        2032,
        688
      ],
      "webhookId": "1c5df276-94b5-42b8-9748-634e389cadcf",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "### [Check the Tutorial](https://www.youtube.com/watch?v=uJtp2NsmR2E)\n![Thumbnail](https://www.samirsaci.com/content/images/2025/06/image-11.png)",
        "height": 380,
        "width": 580
      },
      "id": "53d7aefb-6ecc-465f-8b1e-6141312a80e8",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        912
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-19T01:47:21.301Z",
  "versionId": "fe64aa3a-ca10-46a5-9d06-851d4ec3aaf7"
}