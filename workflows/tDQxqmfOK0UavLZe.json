{
  "active": false,
  "connections": {
    "LinkedIn": {
      "main": [
        []
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "X",
            "type": "main",
            "index": 0
          },
          {
            "node": "Facebook",
            "type": "main",
            "index": 0
          },
          {
            "node": "LinkedIn",
            "type": "main",
            "index": 0
          },
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GENERATE TEXT": {
      "main": [
        [
          {
            "node": "GENERATE PROMPT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "APITemplate.io": {
      "main": [
        []
      ]
    },
    "Minimax Images": {
      "main": [
        []
      ]
    },
    "GENERATE PROMPT": {
      "main": [
        [
          {
            "node": "OPENAI GENERATES IMAGE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "GENERATE TEXT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OPENAI WRITES POSTS": {
      "ai_languageModel": [
        [
          {
            "node": "GENERATE TEXT",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "GENERATE TEXT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OPENAI WRITES PROMPTS": {
      "ai_languageModel": [
        [
          {
            "node": "GENERATE PROMPT",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OPENAI GENERATES IMAGE": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tavily Internet Search": {
      "ai_tool": [
        [
          {
            "node": "GENERATE TEXT",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When clicking –≤–Ç¬òExecute workflow–≤–Ç‚Ñ¢": {
      "main": [
        [
          {
            "node": "GENERATE TEXT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-19T10:16:04.253Z",
  "id": "tDQxqmfOK0UavLZe",
  "isArchived": true,
  "meta": {
    "templateId": "4600"
  },
  "name": "ü§ñ AI content generation for Auto Service üöò Automate your social mediaüì≤! 2",
  "nodes": [
    {
      "parameters": {
        "content": "![Source example](https://i.ibb.co/PZF4szJr/photo-2025-05-30-13-24-04.jpg#full-width)",
        "height": 2920,
        "width": 5760,
        "color": 5
      },
      "id": "e4a3ceac-acaa-434c-aefc-19e4fed34ea6",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# [made with ‚ù§Ô∏è by N8ner üëà click! Feel free to message me!](https://community.n8n.io/u/n8ner/badges) ![](https://i.ibb.co/2YyTWq2v/circuit.jpg#full-width#full-width)",
        "height": 1260,
        "width": 1260,
        "color": 5
      },
      "id": "d806bec6-ee52-4e7e-9b10-41b2dd16b1ba",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        1088
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "7564233298",
        "binaryData": true,
        "binaryPropertyName": "={{'data'}}",
        "additionalFields": {
          "caption": "={{ $('GENERATE TEXT').item.json.output }}"
        }
      },
      "id": "6e8ee9ec-fe55-48d8-afab-b5d2a677cedb",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        4208,
        1264
      ],
      "webhookId": "f33ade31-7243-4d8f-a7e9-fc450ebf7eb5",
      "typeVersion": 1.2,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9
            }
          ]
        }
      },
      "id": "72b10789-5887-49b3-bbc3-06c220bc8150",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        1840,
        1360
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {},
      "id": "64bd78e2-2a1b-4ea8-bf92-e6c113acd229",
      "name": "When clicking Execute workflow",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        1840,
        1648
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "minutes"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1Y26GgkSEimhjFhNyArFEvHTonv6JaqMWVU9jxnV-y-c"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Y26GgkSEimhjFhNyArFEvHTonv6JaqMWVU9jxnV-y-c/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "event": "=rowAdded",
        "options": {
          "columnsToWatch": [
            "Links for articles to refer"
          ],
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRangeA1",
              "range": "A2:A10"
            }
          },
          "valueRender": "UNFORMATTED_VALUE"
        }
      },
      "id": "cb7597f8-fdb9-48de-994a-da6b684421c7",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [
        1840,
        1968
      ],
      "notesInFlow": false,
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldToSplitOut": "choices[0].message.content",
        "options": {}
      },
      "id": "157ac7c9-54df-4dc0-aa89-1b63b17f3148",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        3680,
        1440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Finish - Upload to Platforms![Guide](https://i.ibb.co/d41JsL8q/Screenshot-2025-05-30-122423-1.jpg#full-width#full-width)",
        "height": 1300,
        "width": 520,
        "color": 7
      },
      "id": "bcd7bc00-fb79-4709-8a97-0a43bc274f4c",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4000,
        1072
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "width": 210,
        "color": 7
      },
      "id": "2f7884d1-7da0-492b-8503-9a4de0911773",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4160,
        2000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "width": 210,
        "color": 7
      },
      "id": "f7181d0c-1bf4-4031-86dd-95761940de68",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4160,
        1744
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "width": 210,
        "color": 7
      },
      "id": "d1e3f2e4-8f4e-40aa-b512-b7e7d2667f1e",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4160,
        1488
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "width": 210,
        "color": 7
      },
      "id": "64b6a403-4913-4d1b-8b61-581dec0223a7",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4160,
        1232
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# START - Choose a Trigger![Guide](https://i.ibb.co/d41JsL8q/Screenshot-2025-05-30-122423-1.jpg#full-width#full-width)",
        "height": 1260,
        "width": 500,
        "color": 7
      },
      "id": "a48fa4e0-3781-426f-9f48-1fec77acba68",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1632,
        1088
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 220,
        "color": 4
      },
      "id": "33dc129d-2784-4fb9-a027-589aa443d37b",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1776,
        1904
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 220,
        "color": 4
      },
      "id": "e1666561-2404-460e-b37e-0ebfd15b6261",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1776,
        1600
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 220,
        "color": 4
      },
      "id": "d34574fe-5791-4508-b847-e20eda64cd66",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1776,
        1312
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Edit prompt and system message up for you, customize llm and search links, add your own prompts database ![](https://i.ibb.co/TxQrh405/erasebg-transformed-removebg-preview.png#full-width)",
        "height": 460,
        "width": 760,
        "color": 7
      },
      "id": "ac1bb708-89fb-496e-8291-e86d509ff2f8",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2192,
        1232
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Edit prompt and system message up for you, customize llm and add own prompts database ![](https://i.ibb.co/TxQrh405/erasebg-transformed-removebg-preview.png#full-width)",
        "height": 420,
        "width": 760,
        "color": 7
      },
      "id": "1c2803d0-8ea1-48c1-b3df-6e9a5156be07",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2560,
        1888
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Set up Ai model for generating images, customize prompt up for you ![](https://i.ibb.co/TxQrh405/erasebg-transformed-removebg-preview.png#full-width)",
        "height": 380,
        "width": 760,
        "color": 7
      },
      "id": "b40ab1d2-e7d4-4dce-8200-41ecb761eb9b",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3152,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# The template is set up for Auto Service daily content uploads, but the underlying logic is universal. You can easily adapt it for any niche by editing prompts, adding nodes, and creating or uploading a variety of content to any platform. You can use any LLM and generative AI of your choice. Personally, I prefer the smooth and effective results from ChatGPT 4.1 combined with GPT Image 1.  Enjoy and [message me](https://community.n8n.io/u/n8ner/badges) with your reviews for future improvements! ![](https://i.ibb.co/qLxMHbd5/customize-ride1.jpg#full-width#full-width )",
        "height": 1300,
        "width": 1620,
        "color": 5
      },
      "id": "4aeadd2d-a393-414d-a584-344934f89586",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4512,
        1072
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "pixtral-large-latest",
        "options": {}
      },
      "id": "07a0cb9c-fdd6-4120-b9cc-f92d636eed27",
      "name": "Mistral Cloud Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "position": [
        4656,
        1360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "765cbb25-897b-408d-ac1d-613c07629a78",
      "name": "OpenRouter Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "position": [
        4912,
        1504
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-3-7-sonnet-20250219",
          "cachedResultName": "Claude 3.7 Sonnet"
        },
        "options": {}
      },
      "id": "486efc72-84ea-4f1e-bc8d-f3e53f250ddd",
      "name": "Anthropic Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "position": [
        4656,
        1632
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "21d18ef8-7520-476b-a471-5e3a64902a65",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        5008,
        1360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c14142c6-7294-47a9-805a-038bbe367097",
      "name": "xAI Grok Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatXAiGrok",
      "position": [
        4816,
        1632
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9460fa92-6e31-448f-b87b-7a440a791426",
      "name": "DeepSeek Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "position": [
        5008,
        1632
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "https://huggingface.co/black-forest-labs/FLUX.1-dev",
        "options": {}
      },
      "id": "5db59ffd-c09a-4146-b140-47e8399d6c41",
      "name": "Hugging Face Inference Model",
      "type": "@n8n/n8n-nodes-langchain.lmOpenHuggingFaceInference",
      "position": [
        5200,
        1360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.freepik.com/v1/ai/text-to-image/imagen3",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-freepik-api-key",
              "value": "FPSX38a53a81a693e71a0e9437a657de6342"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"prompt\": \"Crazy dog in the space\",\n  \"num_images\": 1,\n  \"aspect_ratio\": \"square_1_1\",\n  \"styling\": {\n    \"style\": \"anime\",\n    \"effects\": {\n      \"color\": \"pastel\",\n      \"lightning\": \"warm\",\n      \"framing\": \"portrait\"\n    }\n  },\n  \"person_generation\": \"allow_all\",\n  \"safety_settings\": \"block_none\"\n}",
        "options": {}
      },
      "id": "8eea8670-a4a2-4e58-ae04-3a1e7f8cf1de",
      "name": "Freepik API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4576,
        1984
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.runware.ai/v1",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "[\n  {\n    \"taskType\": \"authentication\",\n    \"apiKey\": \"<API_KEY>\"\n  },\n  {\n    \"taskType\": \"imageInference\",\n    \"taskUUID\": \"39d7207a-87ef-4c93-8082-1431f9c1dc97\",\n    \"positivePrompt\": \"a cat\",\n    \"width\": 512,\n    \"height\": 512,\n    \"model\": \"civitai:102438@133677\",\n    \"numberResults\": 1\n  }\n]",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "dc0fb490-d710-4a3d-9c49-2ba3652b2770",
      "name": "Runware API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4576,
        2160
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://clipdrop-api.co/text-to-image/v1",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt"
            }
          ]
        },
        "options": {}
      },
      "id": "b2ea776e-4b6f-4f1a-9c3a-1719719209ec",
      "name": "Clipdrop API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4800,
        2160
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4133831e-0c79-44ae-ba7a-0bf8bead48fd",
      "name": "Ollama Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "position": [
        4816,
        1360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c045b699-12cf-48a2-94ce-bcec997434de",
      "name": "Azure OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "position": [
        5200,
        1632
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "d6134f16-65c1-49ee-823a-2b10954707a2",
      "name": "APITemplate.io",
      "type": "n8n-nodes-base.apiTemplateIo",
      "position": [
        5232,
        2160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.ideogram.ai/v1/ideogram-v3/generate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Api-Key",
              "value": "<apiKey>"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "A photo of a cat sleeping on a couch."
            },
            {
              "name": "rendering_speed",
              "value": "TURBO"
            }
          ]
        },
        "options": {}
      },
      "id": "2f627d07-42e6-4334-8255-24aa86ba7146",
      "name": "Ideogram API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5008,
        2160
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/ideogram-ai/ideogram-v2/predictions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer $REPLICATE_API_TOKEN"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"input\": {\n    \"prompt\": \"An illustration of a black running shoe with the text \\\"Run AI with an API\\\" written on the shoe. The shoe is placed on a blue background. The text is white and bold. The overall image has a modern and techy vibe.\",\n    \"aspect_ratio\": \"16:9\"\n  }\n}",
        "options": {}
      },
      "id": "72377c43-3e1e-4c52-84de-aa8ef825f150",
      "name": "Replicate API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4800,
        1984
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/publishers/google/models/imagegeneration@002:predict",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer $(gcloud auth print-access-token)"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json; charset=utf-8",
        "body": "0",
        "options": {}
      },
      "id": "ae03e3a1-ff22-46ce-b31b-e355611252c0",
      "name": "Imagen Google API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5008,
        1984
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://uu149rez6gw9ehej.eu-west-1.aws.endpoints.huggingface.cloud/distilbert-sentiment",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer <Token>"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "{\"inputs\": \"Deploying my first endpoint was an amazing experience.\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "16eeca87-25b3-42c9-a2d1-7dde51e08db4",
      "name": "HuggingFace API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5232,
        1984
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.dev.runwayml.com/v1/text_to_image",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ YOUR API KEY }}"
            },
            {
              "name": "X-Runway-Version",
              "value": "2024-11-06"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"promptText\": \"string\",\n  \"ratio\": \"1920:1080\",\n  \"seed\": 4294967295,\n  \"model\": \"gen4_image\",\n  \"referenceImages\": [\n    {\n      \"uri\": \"http://example.com\",\n      \"tag\": \"string\"\n    }\n  ],\n  \"contentModeration\": {\n    \"publicFigureThreshold\": \"auto\"\n  }\n}",
        "options": {}
      },
      "id": "ed97601a-7ced-478a-ace3-63ab79f951e8",
      "name": "Runway Images",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5008,
        1808
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Use link as a main reference article source {{ $json.name }}! IMPORTANT! Actualize up to date information and facts check up, use Internet research with Tavily tool!",
        "options": {
          "systemMessage": "(!IMPORTANT!) Write short engaging posts under 1024  characters for Telegram. \n\nOverview\nYou are a brand agent for Autoservis, specializing in creating professional and educational posts about car repair. You write random and interesting daily tips, lifehacks, notes, actual news for 2025 year.\n\nGoals:\nAlways start by conducting real-time research using the Tavily tool to gather the most accurate and up-to-date information on the topic. The post should be written to engage the specified target audience.\n\nBased on your research, create a well-structured Telegram post that:\n\nBegins with a captivating hook\n\nMaintains a professional tone\n\nIs clear and easy to read\n\nIs educational and informative\n\nUses minimal emojis (only when very relevant)\n\nIncludes proper source attribution (e.g., \"according to [Source]\")\n\nContains relevant hashtags to improve visibility\n\nEnds with a clear call to action (e.g., ask for thoughts, feedback, or shares)\n\nOutput instructions:\nYour ONLY output should be the final Telegram post text.\n\nDo not include explanations, notes, or anything outside the post itself.\n\nExample workflow:\nReceive the topic (e.g., –≤–Ç—öReturn on investment in warehouse automation–≤–Ç—ú)\n\nUse Tavily to research and gather the latest information or case studies\n\nDraft the post using this research\n\nFormat it with references, clear structure, relevant hashtags, and a call to action\n\nAt the end of the post write\nService center address: 123 Main St, New York, NY, for appointments call (212) 555-1234"
        }
      },
      "id": "7db2a283-7061-4440-8def-534e96ff7dfe",
      "name": "GENERATE TEXT",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        2368,
        1408
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Make it perfect.\nPhoto-realistic to Hyper-realistic style.\nWidescreen aspect ratio with the highest pixel resolution. Generate an extremely detailed and realistic image based on the provided reference description {{ $json.output }}. Include comprehensive visual details covering:\n\n- Subject–≤–Ç‚Ñ¢s appearance: facial features, expressions, skin tone, hair style and texture, clothing fabric, color, and fit, posture, accessories.\n- Environment: specific real-world setting and background elements, natural lighting (direction, intensity, color temperature), and ambient mood.\n- Colors and textures: precise color palettes, authentic fabric and skin textures, natural reflections, and subtle visual cues enhancing lifelike clarity.\n\nExclude any abstract art styles, text, numbers, letters, logos, or non-photographic elements to ensure natural realism.\n\nThe prompt should specify image rendering in 16K photographic resolution with maximum clarity and realism.\n\nAdditionally, provide explicit, practical instructions on enhancing an existing photo to 16K resolution using advanced AI super-resolution upscaling techniques that:\n\n- Preserve fine details without blurriness or unnatural sharpening.\n- Maintain natural textures and lighting.\n- Minimize artifacts like noise, halos, or abnormal edges.\n- Deliver photo-realistic output with enhanced clarity.\n\nEnsure the background is clear, finely detailed, and naturally integrated with the subject to reinforce photographic accuracy.\n\nFocus solely on producing a precise, clear prompt and enhancement guidance centered on natural realism and photographic fidelity for ultra-high resolution images.\n\n",
        "options": {
          "systemMessage": "=Overview\nYou are an AI agent that converts Telegram posts into visual prompt descriptions for generating graphic marketing materials. These visuals are meant to accompany the Telegram post, effectively conveying the message in a visually appealing, brand-consistent style.\n\nObjective:\nAnalyze the provided Telegram post.\n\nExtract the core message, insight, or key takeaway.\n\nCraft a clear, compelling graphic prompt suitable for a text-to-image generator.\n\nThe final graphic should:\n\nVisually represent or enhance the main idea of the post\n\nBe appropriate for a professional Telegram feed\n\nAppear polished, modern, and engaging\n\nOutput Instructions:\nProvide only the final image prompt without quotation marks.\n\nDo not repeat or paraphrase the Telegram post.\n\nAvoid adding explanations or any additional text–≤–Ç‚Äùoutput only the image prompt.\n\nDo not leave placeholders like –≤–Ç—öHeader area reserved for customizable callout text.–≤–Ç—ú\n\nInclude numeric data from the original post when relevant.\n\nStyle Guidelines:\nApproach this like a brand designer or marketing creative.\n\nVisual elements may include text, charts, icons, abstract shapes, overlays, modern illustrations, motion-inspired effects, bold typographic elements (described but not rendered), or metaphorical concepts.\n\nYou may suggest layout styles (e.g., –≤–Ç—ösplit screen layout,–≤–Ç—ú –≤–Ç—öheader with bold title and subtle background illustration–≤–Ç—ú).\n\nKeep in mind the prompt will be used by AI image generation tools–≤–Ç‚Äùmake it clear and effective.\n\nExample Prompt Format:\nA sleek flat-design graphic featuring a human brain intertwined with mechanical gears, symbolizing the integration of AI and automation.\nMinimalist background with soft gradients, clean sans-serif text areas.\n- - - Important! dont put text on image! - - -"
        }
      },
      "id": "946716eb-39a5-42f6-88a2-bc89b3351c91",
      "name": "GENERATE PROMPT",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        2720,
        2048
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "authentication": "communityManagement",
        "person": "[CONFIGURE_YOUR_LINKEDIN_PERSON_ID]",
        "text": "={{ $json['choices[0].message.content'] }}",
        "additionalFields": {}
      },
      "id": "bd34e79d-6f3e-4b75-b6cc-ac5e3062ad3e",
      "name": "LinkedIn",
      "type": "n8n-nodes-base.linkedIn",
      "position": [
        4208,
        1792
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "id": "b49aaca1-f326-4fc2-8cc6-265891905f52",
      "name": "X",
      "type": "n8n-nodes-base.twitter",
      "position": [
        4208,
        2048
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "options": {}
      },
      "id": "d5cc6185-5c6d-4ed4-8b93-c546fe57b804",
      "name": "Facebook",
      "type": "n8n-nodes-base.facebookGraphApi",
      "position": [
        4208,
        1520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.minimaxi.chat/v1/image_generation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {api_key}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "image-01"
            },
            {
              "name": "prompt",
              "value": "men Dressing in white t shirt, full-body stand front view image :25, outdoor, Venice beach sign, full-body image, Los Angeles, Fashion photography of 90s, documentary, Film grain, photorealistic"
            },
            {
              "name": "aspect_ratio",
              "value": "16:9"
            },
            {
              "name": "response_format",
              "value": "url"
            },
            {
              "name": "n",
              "value": "3"
            },
            {
              "name": "prompt_optimizer",
              "value": "true"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "7525e88c-eacd-4bb5-8f08-b85dd6aa8777",
      "name": "Minimax Images",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4576,
        1808
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api-singapore.klingai.com/v1/images/text2image",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer xxx"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n\t\"code\": 0, //Error codes–ø—ò‚Ä∫Specific definitions can be found in Error codes\n  \"message\": \"string\", //Error information\n  \"request_id\": \"string\", //Request ID, generated by the system, is used to track requests and troubleshoot problems\n  \"data\":[\n    {\n      \"task_id\": \"string\", //Task ID, generated by the system\n      \"task_status\": \"string\", //Task status, Enum values–ø—ò—ôsubmitted–≥–Ç–Éprocessing–≥–Ç–Ésucceed–≥–Ç–Éfailed\n      \"task_status_msg\": \"string\", //Task status information, displaying the failure reason when the task fails (such as triggering the content risk control of the platform, etc.)\n      \"created_at\": 1722769557708, //Task creation time, Unix timestamp, unit ms\n      \"updated_at\": 1722769557708, //Task update time, Unix timestamp, unit ms\n      \"task_result\":{\n        \"images\":[\n          {\n            \"index\": int, //Image Number–ø—ò–ä0-9\n            \"url\": \"string\" //URL for generating images–ø—ò–äsuch as–ø—ò—ôhttps://h1.inkwai.com/bs2/upload-ylab-stunt/1fa0ac67d8ce6cd55b50d68b967b3a59.png(To ensure information security, generated images/videos will be cleared after 30 days. Please make sure to save them promptly.)\n          }\n      \t]\n      }\n    }\n  ]\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "02acacfc-fa40-440d-a35c-f615c3369c82",
      "name": "Kling Images",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4800,
        1808
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "https://cloud.leonardo.ai/api/rest/v1/generations/id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "0a394dbb-ae24-456c-b13f-f568edd40b44",
      "name": "Leonardo Images",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5232,
        1808
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {},
      "id": "692e118f-9272-45f9-80c4-6463add4977c",
      "name": "Tavily Internet Search",
      "type": "@tavily/n8n-nodes-tavily.tavilyTool",
      "position": [
        2288,
        1312
      ],
      "typeVersion": 1,
      "credentials": {}
    },
    {
      "parameters": {
        "resource": "image",
        "model": "gpt-image-1",
        "prompt": "= IMPORTANT! DONT WRITE TEXT ON A PICTURE! Create perfect visual for\n{{ $json.output }}",
        "options": {}
      },
      "id": "de72e33d-5f58-4fbd-80cf-0eb9f4344175",
      "name": "OPENAI GENERATES IMAGE",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        3312,
        1440
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "id": "0dbe4250-2cd8-4295-bd4b-42ec26ab6cb6",
      "name": "OPENAI WRITES PROMPTS",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        2656,
        2192
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "id": "07dc3e20-3d51-4bb7-a327-5d961afb2b96",
      "name": "OPENAI WRITES POSTS",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        2288,
        1552
      ],
      "typeVersion": 1.2
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-30T09:29:11.000Z",
  "versionId": "7d0fb7f8-5a44-438f-a7c2-76d8918eb8bd"
}